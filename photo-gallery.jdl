entity Album {
  name String required minlength(3) maxlength(255),           // Album name
  event String maxlength(255),                                // Optional event name
  creationDate Instant required,                              // Album creation date
  overrideDate Instant,                                       // Optional override for sorting
  thumbnail ImageBlob,                                        // Album cover image
  keywords String                                             // Optional keywords for search
}

entity Tag {
  name String required unique                                 // Tag name for filtering
}

enum AlbumSort {
  EVENT,
  DATE
}

relationship ManyToOne {
  Album{user(login)} to User with builtInEntity               // Album owner/contributor
}

relationship ManyToMany {
  Album{tags(name)} to Tag{albums}                            // Albums can have multiple tags
}

paginate Album with pagination
service Album with serviceClass
dto Album with mapstruct

paginate Tag with pagination
service Tag with serviceClass
dto Tag with mapstruct

/** ===================
  User Story Alignment: "View and Filter Gallery Albums"
  ===================
  ✅ Added Tag entity: to enable filtering albums by tags.
  ✅ Added ManyToMany relationship between Album and Tag: to support multiple tags per album.
  ✅ Added optional `keywords` field to Album: enables searching albums by keyword.
  ✅ Reused existing `event` field: allows sorting and filtering by event.
  ✅ Reused existing `creationDate` and `overrideDate`: enables chronological sorting and admin overrides.
  ✅ Reused relationship with User: enables filtering albums by contributor.
  ✅ Added inline comments to explain field purposes.
*/
